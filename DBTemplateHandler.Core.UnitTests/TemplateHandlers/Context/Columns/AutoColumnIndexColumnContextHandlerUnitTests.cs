using DBTemplateHandler.Core.Database;
using DBTemplateHandler.Core.TemplateHandlers.Context.Columns;
using DBTemplateHandler.Core.TemplateHandlers.Handlers;
using DBTemplateHandler.Core.UnitTests.ModelImplementation;
using NUnit.Framework;
using System;
using System.Collections.Generic;

namespace DBTemplateHandler.Core.UnitTests.TemplateHandlers.Context.Columns
{
    [TestFixture]
    public class AutoColumnIndexColumnContextHandlerUnitTests
    {
        private AutoColumnIndexColumnContextHandler _tested;

        [OneTimeSetUp]
        public void OneTimeSetUp()
        {
            var templateHandlerNew = TemplateHandlerBuilder.Build(null);
            _tested = new AutoColumnIndexColumnContextHandler(templateHandlerNew);
        }

        [Test]
        public void DefaultIndexShouldBeMinus1Value()
        {
            Assert.AreEqual(0, _tested.DefaultIndex);
        }

        [Test]
        public void ShouldThrowAnExceptionWhenStringContextIsNull()
        {
            Assert.Throws<Exception>(() => _tested.ProcessContext(null,new ProcessorDatabaseContext() { Column = new ColumnModelForTest() { } }));
        }

        [Test]
        public void ShouldThrowAnArgumentNullExceptionWhenDatabaseContextIsNull()
        {
            Assert.Throws<ArgumentNullException>(() => _tested.ProcessContext("Hello world", null));
        }

        [Test]
        public void ShouldThrowANExceptionWhenColumnModelIsNull()
        {
            Assert.Throws<ArgumentException>(() =>
            {
                _tested.ProcessContext("Hello World !", new ProcessorDatabaseContext() { Column = null });
            });
        }

        [Test]
        public void ShouldThrowAnExceptionWhenThereIsContentBetweenStartAndEndContext()
        {
            Assert.Throws<Exception>(() =>
            {
                _tested.ProcessContext($"{_tested.StartContext}I Should not be here{_tested.EndContext}",
                    new ProcessorDatabaseContext() { Column = new ColumnModelForTest() { IsAutoGeneratedValue = true } });
            });
        }


        [Test]
        public void ShouldReturnDefaultIndexWhenParentTableColumnReferenceIsNull()
        {
            var processedContext = _tested.ProcessContext($"{_tested.StartContext}{_tested.EndContext}",
                new ProcessorDatabaseContext() { 
                    Column = new ColumnModelForTest() { IsAutoGeneratedValue = true },
                    Table = new TableModelForTest()
                    {
                        Columns = null
                    }
                });
            Assert.AreEqual($"{_tested.DefaultIndex}", processedContext);
        }

        [Test]
        public void ProcessedContextShouldBe1ValueIndexWhenThereIsOneAutoAndOneNoneAutoColumnInTheColumnsParentTableList()
        {
            var columnModel = new ColumnModel()
            {
                IsAutoGeneratedValue = true
            };
            var databaseContext = new ProcessorDatabaseContext()
            {
                Column = columnModel,
                Table = new TableModelForTest()
                {
                    Columns = new List<IColumnModel>()
                    {
                        new ColumnModelForTest
                        {
                            IsAutoGeneratedValue = true,
                        },
                        new ColumnModelForTest
                        {
                            IsAutoGeneratedValue = false,
                        },
                        columnModel,
                        new ColumnModelForTest
                        {
                            IsAutoGeneratedValue = true,
                        }
                    }
                }
            };
            var processedContext = _tested.ProcessContext($"{_tested.StartContext}{_tested.EndContext}", databaseContext);
            Assert.AreEqual($"{1}", processedContext);
        }


        [Test]
        public void ProcessedContextShouldBeDefaultAutoIndexWhenParentTableIsNull()
        {
            var columnModel = new ColumnModelForTest()
            {
                IsAutoGeneratedValue = true
            };
            var databaseContext = new ProcessorDatabaseContext()
            {
                Column = columnModel,
                Table = null
            };
            var processedContext = _tested.ProcessContext($"{_tested.StartContext}{_tested.EndContext}", databaseContext);
            Assert.AreEqual($"{_tested.DefaultIndex}", processedContext);
        }

        [Test]
        public void ProcessedContextShouldBeDefaultAutoIndexWhenColumnIsNotInTheParentTable()
        {
            var columnModel = new ColumnModelForTest()
            {
                IsAutoGeneratedValue = true
            };
            var databaseContext = new ProcessorDatabaseContext()
            {
                Column = columnModel,
                Table = new TableModelForTest()
                {
                    Columns = new List<IColumnModel>()
                    {
                        new ColumnModel
                        {
                            IsAutoGeneratedValue = true,
                        },
                        new ColumnModel
                        {
                            IsAutoGeneratedValue = false,
                        },
                        new ColumnModel
                        {
                            IsAutoGeneratedValue = true,
                        }
                    }
                }
            };
            var processedContext = _tested.ProcessContext($"{_tested.StartContext}{_tested.EndContext}",databaseContext);
            Assert.AreEqual($"{_tested.DefaultIndex}", processedContext);
        }
    }
}
