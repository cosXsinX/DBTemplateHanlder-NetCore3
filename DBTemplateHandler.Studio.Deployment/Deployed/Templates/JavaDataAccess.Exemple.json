[
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableSelectDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableSelectDAO {\r\n\tprivate Connection _connection;\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableSelectDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t}\r\n\t\r\n\tprivate static final String SELECT_QUERY=\u0022SELECT \u0022 \u002B\r\n\t\t\t{:TDB:TABLE:COLUMN:FOREACH[\r\n\t\t\t\u0022\u0022\u002B {:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN \u002B\u0022{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(,):::} \u0022 \u002B]::}\r\n\t\t\u0022 FROM \u0022 \u002B\r\n\t\t\t\u0022 {:TDB:TABLE:CURRENT:NAME::}\u0022;\r\n\tpublic List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E Select(String WhereArgsStr)\r\n\t{\r\n\t\tStatement stmt;\r\n\t\ttry {\r\n\t\t\tstmt = _connection.createStatement();\r\n\t\t\r\n\t\t\tString sql = SELECT_QUERY;\r\n\t\t\tif(WhereArgsStr != null \u0026\u0026 !WhereArgsStr.isEmpty())\r\n\t\t\t{\r\n\t\t\t\tsql = sql \u002B \u0022 WHERE \u0022 \u002B WhereArgsStr; \r\n\t\t\t}\r\n\t\t\tResultSet resultSet = stmt.executeQuery(sql);\r\n\t\t\tList\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E result = new ArrayList\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E();\r\n\t\t\twhile(resultSet.next())\r\n\t\t\t{\r\n\t\t\t\t{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO currentRecord = new {:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO();\r\n\t\t\t\t{:TDB:TABLE:COLUMN:FOREACH[\r\n\t\t\t\tcurrentRecord.set{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}(resultSet.get{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}({:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN));]::}\r\n\t\t\t\tresult.add(currentRecord);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} catch (SQLException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}"
  },
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableCreateDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableCreateDAO {\r\n\tprivate Connection _connection;\r\n\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableCreateDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t}\r\n\t\r\n\r\n\tpublic void CreateTable()\r\n\t{\r\n\t\tStatement stmt;\r\n\t\ttry {\r\n\t\t\tstmt = _connection.createStatement();\r\n\t\t\tString sql = \u0022CREATE TABLE IF NOT EXISTS \u0022 \u002B {:TDB:TABLE:CURRENT:NAME::}TableDescription.TABLE_NAME \u002B \u0022 \u0022 \u002B\r\n\t                {:TDB:TABLE:COLUMN:FOREACH[\r\n\t\t\t\t\u0022{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:FIRST:COLUMN(():::}\u0022 \u002B {:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN \u002B \u0022 {:TDB:TABLE:COLUMN:FOREACH:CURRENT:TYPE::} {:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:KEY:PRIMARY(PRIMARY KEY)KEY:PRIMARY:::} {:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:KEY:AUTO(AUTOINCREMENT)KEY:AUTO:::}{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(,):::}{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:LAST:COLUMN()):::}\u0022 {:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(\u002B):::}{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:LAST:COLUMN(;):::}]::}\r\n\t\t\tstmt.executeUpdate(sql);\r\n\t\t\tstmt.close();\r\n\t\t\t\r\n\t\t} catch (SQLException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDAO\r\n{\r\n\tprivate Connection _connection;\r\n\t\r\n\t{:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableCreateDAO _createTableDAO;\r\n\t{:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableSelectDAO _selectDAO;\r\n\t{:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableInsertDAO _insertDAO;\r\n\t{:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableUpdateDAO _updateDAO;\r\n\t{:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDeleteDAO _deleteDAO;\r\n\t{:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDropDAO _dropTableDAO;\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\tif(SQLiteDatabaseConnection == null) return;\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t\t_createTableDAO = new {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableCreateDAO(SQLiteDatabaseConnection);\r\n\t\t_selectDAO = new {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableSelectDAO(SQLiteDatabaseConnection);\r\n\t\t_insertDAO = new {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableInsertDAO(SQLiteDatabaseConnection);\r\n\t\t_updateDAO = new {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableUpdateDAO(SQLiteDatabaseConnection);\r\n\t}\r\n\r\n\tpublic void CreateAssociatedTableInDB()\r\n\t{\r\n\t\tif(_createTableDAO == null) return;\r\n\t\t_createTableDAO.CreateTable();\r\n\t}\r\n\t\r\n\tpublic List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E Select(String WhereArgsStr)\r\n\t{\r\n\t\tif(_selectDAO == null) return new ArrayList\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E();\r\n\t\treturn _selectDAO.Select(WhereArgsStr);\r\n\t}\r\n\t\r\n\tpublic boolean Insert({:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO pojo)\r\n\t{\r\n\t\tif(_insertDAO == null) return false;\r\n\t\treturn _insertDAO.Insert(pojo);\r\n\t}\r\n\t\r\n\tpublic boolean Insert(List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E pojoList)\r\n\t{\r\n\t\tif(_insertDAO == null) return false;\r\n\t\treturn _insertDAO.Insert(pojoList);\r\n\t}\r\n\t\r\n\tpublic boolean Update({:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO pojo)\r\n\t{\r\n\t\tif(_updateDAO == null) return false;\r\n\t\treturn _updateDAO.Update(pojo);\r\n\t}\r\n\t\r\n\tpublic boolean Update(List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E pojoList)\r\n\t{\r\n\t\tif(_updateDAO == null) return false;\r\n\t\treturn _updateDAO.Update(pojoList);\r\n\t}\r\n\t\r\n\tpublic boolean Delete({:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO pojo)\r\n\t{\r\n\t\tif(_deleteDAO == null) return false;\r\n\t\treturn _deleteDAO.Delete(pojo);\r\n\t}\r\n\t\r\n\t\r\n\tpublic boolean Delete(List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E pojoList)\r\n\t{\r\n\t\tif(_deleteDAO == null) return false;\r\n\t\treturn _deleteDAO.Delete(pojoList);\r\n\t}\r\n\t\r\n\tpublic void DropTable()\r\n\t{\r\n\t\tif(_dropTableDAO == null) return;\r\n\t\t_dropTableDAO.DropTable();\r\n\t}\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableDeleteDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDeleteDAO {\r\n\tprivate Connection _connection;\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDeleteDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t}\r\n\t\r\n\tprivate final static String DELETE_QUERY=\u0022DELETE FROM \u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.TABLE_NAME\u002B\u0022 WHERE \u0022 \u002B\r\n\t\t\t\u0022\u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.ID_COLUMN\u002B\u0022=?\u0022;\r\n\tpublic boolean Delete({:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO pojo)\r\n\t{\r\n\t\tif(pojo == null) return false;\r\n\t\ttry {\r\n\t\t\tPreparedStatement stmt = _connection.prepareStatement(DELETE_QUERY);\r\n\t\t\t_connection.setAutoCommit(false);\r\n\t\t\t{:TDB:TABLE:COLUMN:PRIMARY:FOREACH[\r\n\t\t\tstmt.set{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}({:TDB:TABLE:COLUMN:PRIMARY:FOREACH:CURRENT:INDEX::}, pojo.get{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}());]::}\r\n\t\t\t\r\n\t\t\tstmt.execute();\r\n\t\t\t_connection.setAutoCommit(true);\r\n\t\t\treturn true;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic boolean Delete(List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E pojoList)\r\n\t{\r\n\t\tif(pojoList == null) return false;\r\n\t\ttry {\r\n\t\t\t_connection.setAutoCommit(false);\r\n\t\t\tfor(int currentIndex=0;currentIndex\u003CpojoList.size();currentIndex\u002B\u002B)\r\n\t\t\t{\r\n\t\t\t\t{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO currentPOJO = pojoList.get(currentIndex);\r\n\t\t\t\tPreparedStatement stmt = _connection.prepareStatement(DELETE_QUERY);\r\n\t\t\t\t{:TDB:TABLE:COLUMN:PRIMARY:FOREACH[\r\n\t\t\t\tstmt.set{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}({:TDB:TABLE:COLUMN:PRIMARY:FOREACH:CURRENT:INDEX::}, currentPOJO.get{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}());]::}\r\n\t\t\t\tstmt.execute();\r\n\t\t\t}\r\n\t\t\t_connection.setAutoCommit(true);\r\n\t\t\treturn true;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableDropDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDropDAO {\r\n\tprivate Connection _connection;\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableDropDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t}\r\n\t\r\n\tpublic void DropTable()\r\n\t{\r\n\t\tStatement stmt;\r\n\t\ttry {\r\n\t\t\tstmt = _connection.createStatement();\r\n\t\t\tString sql = \u0022DROP TABLE IF EXISTS \u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.TABLE_NAME\u002B\u0022 \u0022 ; \r\n\t\t\tstmt.executeUpdate(sql);\r\n\t\t\tstmt.close();\r\n\t\t\t\r\n\t\t} catch (SQLException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableInsertDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableInsertDAO {\r\n\tprivate Connection _connection;\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableInsertDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t}\r\n\t\r\n\tprivate final static String INSERT_STATEMENT = \r\n\t\t\t\u0022INSERT INTO \u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.TABLE_NAME\u002B\u0022 \u0022 \u002B\r\n\t\t\t\t\t\u0022(\u0022 \u002B\r\n\t\t\t\t\t\t{:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH[\r\n\t\t\t\t\t\t\u0022\u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN{:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(\u002B\u0022,\u0022):::} \u002B]::}\r\n\t\t\t\t\t\u0022) VALUES ({:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH[?{:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(,):::}]::});\u0022;\r\n\t\r\n\tpublic boolean Insert({:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO pojo)\r\n\t{\r\n\t\tif(pojo == null) return false;\r\n\t\tPreparedStatement stmt;\r\n\t\ttry {\r\n\t\t\tstmt = _connection.prepareStatement(INSERT_STATEMENT);\r\n\t\t\t_connection.setAutoCommit(false);\r\n\t\t\t{:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH[\r\n\t\t\tstmt.set{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}({:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH:CURRENT:INDEX::}, pojo.get{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}());]::}\r\n\t\t    stmt.executeUpdate();\r\n\t\t    {:TDB:TABLE:COLUMN:AUTO:FOREACH[\r\n\t\tpojo.set{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}(stmt.getGeneratedKeys().getInt({:TDB:TABLE:COLUMN:AUTO:FOREACH:CURRENT:INDEX::}));]::}\r\n\t\t    _connection.commit();\r\n\t\t    _connection.setAutoCommit(true);\r\n\t\t    return true;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic boolean Insert(List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E pojoList)\r\n\t{\r\n\t\tif(pojoList==null) return false;\r\n\t\ttry {\r\n\t\t\t_connection.setAutoCommit(false);\r\n\t\t\t\r\n\t\t\tfor(int currentIndex = 0 ; currentIndex \u003C pojoList.size(); currentIndex\u002B\u002B )\r\n\t\t\t{\r\n\t\t\t\t{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO currentPojo = pojoList.get(currentIndex);\r\n\t\t\t\tPreparedStatement stmt = _connection.prepareStatement(INSERT_STATEMENT);\r\n\t\t\t\t{:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH[\r\n\t\t\t\tstmt.set{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}({:TDB:TABLE:COLUMN:NOT:AUTO:FOREACH:CURRENT:INDEX::}, currentPojo.get{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}());]::}\r\n\t\t\t    stmt.executeUpdate();\r\n\t\t\t    currentPojo.setId(stmt.getGeneratedKeys().getInt(1));\r\n\t\t\t}\r\n\t\t\t_connection.commit();  \r\n\t\t\t_connection.setAutoCommit(true);\r\n\t\t\treturn true;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableSelectDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableSelectDAO {\r\n\tprivate Connection _connection;\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableSelectDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t}\r\n\t\r\n\tprivate static final String SELECT_QUERY=\u0022SELECT \u0022 \u002B\r\n\t\t\t{:TDB:TABLE:COLUMN:FOREACH[\r\n\t\t\t\u0022\u0022\u002B {:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN \u002B\u0022{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(,):::} \u0022 \u002B]::}\r\n\t\t\u0022 FROM \u0022 \u002B\r\n\t\t\t\u0022 {:TDB:TABLE:CURRENT:NAME::}\u0022;\r\n\tpublic List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E Select(String WhereArgsStr)\r\n\t{\r\n\t\tStatement stmt;\r\n\t\ttry {\r\n\t\t\tstmt = _connection.createStatement();\r\n\t\t\r\n\t\t\tString sql = SELECT_QUERY;\r\n\t\t\tif(WhereArgsStr != null \u0026\u0026 !WhereArgsStr.isEmpty())\r\n\t\t\t{\r\n\t\t\t\tsql = sql \u002B \u0022 WHERE \u0022 \u002B WhereArgsStr; \r\n\t\t\t}\r\n\t\t\tResultSet resultSet = stmt.executeQuery(sql);\r\n\t\t\tList\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E result = new ArrayList\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E();\r\n\t\t\twhile(resultSet.next())\r\n\t\t\t{\r\n\t\t\t\t{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO currentRecord = new {:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO();\r\n\t\t\t\t{:TDB:TABLE:COLUMN:FOREACH[\r\n\t\t\t\tcurrentRecord.set{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}(resultSet.get{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}({:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN));]::}\r\n\t\t\t\tresult.add(currentRecord);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} catch (SQLException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%JavaSQLiteTableUpdateDAO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableUpdateDAO {\r\n\tprivate Connection _connection;\r\n\tpublic {:TDB:TABLE:CURRENT:NAME::}JavaSQLiteTableUpdateDAO(Connection SQLiteDatabaseConnection)\r\n\t{\r\n\t\t_connection = SQLiteDatabaseConnection;\r\n\t}\r\n\t\r\n\tprivate final static String UPDATE_QUERY = \u0022UPDATE \u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.TABLE_NAME\u002B\u0022 \u0022 \u002B\r\n\t\t\t\u0022SET \u0022 \u002B \r\n\t\t\t\t{:TDB:TABLE:COLUMN:NOT:PRIMARY:FOREACH[{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:KEY:NOT:AUTO(\r\n\t\t\t\t\u0022\u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN\u002B\u0022=?{:TDB:TABLE:COLUMN:NOT:PRIMARY:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(,):::}\u0022 \u002B)KEY:NOT:AUTO:::}]::}\r\n\t\t\t\u0022 WHERE \u0022\r\n\t\t\t\t{:TDB:TABLE:COLUMN:PRIMARY:FOREACH[\u002B \u0022\u0022\u002B{:TDB:TABLE:CURRENT:NAME::}TableDescription.{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN\u002B\u0022=?{:TDB:TABLE:COLUMN:PRIMARY:FOREACH:CURRENT:IS:NOT:LAST:COLUMN(,):::}\u0022\u002B\u0022;\u0022;]::}\r\n\tpublic boolean Update({:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO pojo)\r\n\t{\r\n\t\tif(pojo == null) return false;\r\n\t\ttry {\r\n\t\t\tPreparedStatement stmt = _connection.prepareStatement(UPDATE_QUERY);\r\n\t\t\tint currentColumnIndex = 1;\r\n\t\t\t_connection.setAutoCommit(false);{:TDB:TABLE:COLUMN:NOT:PRIMARY:FOREACH[\r\n\t\t\tstmt.set{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}( currentColumnIndex\u002B\u002B , pojo.get{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}());]::}\r\n\t\t\tstmt.execute();\r\n\t\t\t_connection.setAutoCommit(true);\r\n\t\t\treturn true;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic boolean Update(List\u003C{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO\u003E pojoList)\r\n\t{\r\n\t\tif(pojoList == null) return false;\r\n\t\ttry {\r\n\t\t\t_connection.setAutoCommit(false);\r\n\t\t\tfor(int currentIndex=0;currentIndex\u003CpojoList.size();currentIndex\u002B\u002B)\r\n\t\t\t{\r\n\t\t\t\t{:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO currentPOJO = pojoList.get(currentIndex);\r\n\t\t\t\tint currentColumnIndex = 1;\r\n\t\t\t\tPreparedStatement stmt = _connection.prepareStatement(UPDATE_QUERY);{:TDB:TABLE:COLUMN:NOT:PRIMARY:FOREACH[\r\n\t\t\t\tstmt.set{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}(currentColumnIndex\u002B\u002B, currentPOJO.get{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}());]::}\r\n\t\t\t\tstmt.execute();\r\n\t\t\t}\r\n\t\t\t_connection.setAutoCommit(true);\r\n\t\t\treturn true;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%TableDescription.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}TableDescription {\r\n\r\n\tpublic final static String TABLE_NAME = \u0022{:TDB:TABLE:CURRENT:NAME::}\u0022;\r\n\t{:TDB:TABLE:COLUMN:FOREACH[\r\n\tpublic final static String {:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}_COLUMN = \u0022{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}\u0022;\r\n\t]::}\r\n\t\r\n}\r\n"
  },
  {
    "TemplatedFilePath": "%tableName%TableRecordPOJO.java",
    "TemplatedFileContent": "package com.sqlite.dal.test.project.dao;\r\n\r\npublic class {:TDB:TABLE:CURRENT:NAME::}TableRecordPOJO {\r\n\t\r\n\t\r\n{:TDB:TABLE:COLUMN:FOREACH[\r\n\tprivate {:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::} _{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::} ;\r\n\t\r\n\tpublic {:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::} get{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}(){\r\n\t\treturn _{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::} ;\r\n\t}\r\n\t\r\n\t\r\n\t{:TDB:TABLE:COLUMN:FOREACH:CURRENT:IS:KEY:NOT:AUTO(public void set{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::}({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::} value){\r\n\t\t_{:TDB:TABLE:COLUMN:FOREACH:CURRENT:NAME::}{:TDB:FUNCTION:FIRST:CHARACTER:TO:UPPER:CASE({:TDB:TABLE:COLUMN:FOREACH:CURRENT:CONVERT:TYPE(JAVA)::})::} = value;\r\n\t})KEY:NOT:AUTO:::}\r\n]::}\r\n}\r\n"
  }
]