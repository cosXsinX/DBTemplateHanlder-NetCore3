using DBTemplateHandler.Core.Database;
using DBTemplateHandler.Core.Template;
using System;
using System.Collections.Generic;

namespace DBTemplateHandler.Persistance
{
    public class PersistenceFacade
    {
        public IList<ITemplateModel> GetAllTemplateModel()
        {
            return new List<ITemplateModel>()
            {
                new TemplateModel(){TemplatedFilePath = "SecondTemplate-%database%-%table%.cs" , TemplatedFileContent = "Hello"},
                new TemplateModel(){TemplatedFilePath = "FirstTemplate-%database%.cs",TemplatedFileContent = "Coucou"}
            };
        }

        public void Save(ITemplateModel templateModel)
        {

        }


        public IList<IDatabaseModel> GetAllDatabaseModel()
        {
            return new List<IDatabaseModel>()
            {
                new DatabaseModel()
            {
                Name = "TestDatabase",
                Tables = new List<ITableModel>()
                {
                    new TableModel()
                    {
                        Name = "FirstTable",
                        Columns = new List<IColumnModel>()
                        {
                            new ColumnModel()
                            {
                                Name = "FirstColumn",
                                IsNotNull = true,
                                IsPrimaryKey = true,
                                Type = "VARCHAR",
                                IsAutoGeneratedValue = true,
                            },
                            new ColumnModel()
                            {
                                Name = "SecondColumn",
                                IsNotNull = true,
                                IsPrimaryKey = true,
                                Type = "INTEGER",
                                IsAutoGeneratedValue = true,
                            }
                        }
                    }
                }
            }
            };
        }

        public void Save(IDatabaseModel databaseModel)
        {

        }
    }
}
