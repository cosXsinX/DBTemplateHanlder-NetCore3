using DBTemplateHandler.Core.TemplateHandlers.Columns;
using DBTemplateHandler.Core.TemplateHandlers.Context.Columns;
using DBTemplateHandler.Core.TemplateHandlers.Context.Database;
using DBTemplateHandler.Core.TemplateHandlers.Context.Functions;
using DBTemplateHandler.Core.TemplateHandlers.Context.Tables;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace DBTemplateHandler.Core.TemplateHandlers.Context
{
    public class TemplateContextHandlerRegister
    {
        private readonly IList<ITemplateContextHandler> _contextHandlers =
            new List<ITemplateContextHandler>()
            {
                //Column contextes
            new AutoColumnIndexColumnContextHandler(),
            new ColumnIndexColumnContextHandler(),
            new ColumnNameColumnContextHandler(),
            new ColumnValueConvertTypeColumnContextHandler(),
            new ColumnValueTypeColumnContextHandler(),
            new IsAutoColumnAFirstAutoColumnContextHandler(),
            new IsAutoColumnALastAutoColumnContextHandler(),
            new IsAutoColumnNotAFirstAutoColumnContextHandler(),
            new IsAutoColumnNotALastAutoColumnContextHandler(),
            new IsColumnAFirstColumnContextHandler(),
            new IsColumnALastColumnContextHandler(),
            new IsColumnAutoGeneratedValueColumnContextHandler(),
            new IsColumnNotAFirstColumnContextHandler(),
            new IsColumnNotALastColumnContextHandler(),
            new IsColumnNotAutoGeneratedValueColumnContextHandler2(),
            new IsColumnNotNullValueColumnContextHandler(),
            new IsColumnNotPrimaryKeyColumnContextHandler(),
            new IsColumnPrimaryKeyColumnContextHandler(),
            new IsNotAutoColumnAFirstAutoColumnContextHandler(),
            new IsNotAutoColumnALastAutoColumnContextHandler(),
            new IsNotAutoColumnNotAFirstAutoColumnContextHandler(),
            new IsNotAutoColumnNotALastAutoColumnContextHandler(),
            new IsNotNullColumnAFirstAutoColumnContextHandler(),
            new IsNotNullColumnALastAutoColumnContextHandler(),
            new IsNotPrimaryColumnAFirstAutoColumnContextHandler(),
            new IsNotPrimaryColumnALastAutoColumnContextHandler(),
            new IsNotPrimaryColumnNotAFirstAutoColumnContextHandler(),
            new IsNotPrimaryColumnNotALastAutoColumnContextHandler(),
            new IsPrimaryColumnAFirstAutoColumnContextHandler(),
            new IsPrimaryColumnALastAutoColumnContextHandler(),
            new IsPrimaryColumnNotAFirstAutoColumnContextHandler(),
            new IsPrimaryColumnNotALastAutoColumnContextHandler(),
            new NotAutoColumnIndexColumnContextHandler(),
            new NotNullColumnIndexColumnContextHandler(),
            new NotPrimaryColumnIndexColumnContextHandler(),
            new PrimaryColumnIndexColumnContextHandler(),
            //Table
            new ForEachAutoGeneratedValueColumnTableContextHandler(),
            new ForEachColumnTableContextHandler(),
            new ForEachNotAutoGeneratedValueColumnTableContextHandler(),
            new ForEachNotNullColumnTableContextHandler(),
            new ForEachNotPrimaryKeyColumnTableContextHandler(),
            new ForEachPrimaryKeyColumnTableContextHandler(),
            new TableNameTableContextHandler(),
            //Database
            new DatabaseNameDatabaseContextHandler(),
            new ForEachTableDatabaseContextHandler(),
            //Functions
            new FirstLetterToUpperCaseFunctionTemplateHandler(),
    };


        //public IList<ITemplateContextHandler> GetHandlers()
        //{
        //    return _contextHandlers.ToList();
        //}

        public IList<T> GetHanlders<T>() where T :class,ITemplateContextHandler
        {
            return _contextHandlers.Select(m => m as T)
                .Where(m => m != null).ToList();
        }

        public IList<AbstractColumnTemplateContextHandler> GetColumnHandlers()
        {
            return GetHanlders<AbstractColumnTemplateContextHandler>();
        }

        public IList<AbstractTableTemplateContextHandler> GetTableHandlers()
        {
            return GetHanlders<AbstractTableTemplateContextHandler>();
        }

        public IList<AbstractDatabaseTemplateContextHandler> GetDatabaseHandlers()
        {
            return GetHanlders<AbstractDatabaseTemplateContextHandler>();
        }

        public IList<AbstractFunctionTemplateContextHandler> GetFunctionHandlers()
        {
            return GetHanlders<AbstractFunctionTemplateContextHandler>();
        }
    }
}
